plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yashaswi'
version = '0.0.1-SNAPSHOT'
description = 'a weather api top learn '

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
bootRun {
    sourceResources sourceSets.main

    // Load environment variables from .env file
    doFirst {
        def envFile = file('.env')
        if (envFile.exists()) {
            envFile.readLines().each { line ->
                def (key, value) = line.split('=', 2)
                if (key && value && !key.startsWith('#')) {
                    environment key.trim(), value.trim()
                }
            }
        }
    }

    jvmArgs = ['-Dspring.devtools.restart.enabled=true']
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
}



tasks.named('test') {
    useJUnitPlatform()
}
